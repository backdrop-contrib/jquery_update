<?php

/**
 * @file
 * Install file for jQuery Update.
 */

/**
 * Implements hook_requirements().
 */
function jquery_update_requirements($phase) {
  $requirements = array();

  if ($phase == 'install') {
    // _jquery_update_check_custom_vs_latest_versions() is defined in
    // jquery_update.module.
    module_load_include('module', 'jquery_update');
  }

  if ($phase == 'runtime') {
    $versions = array();
    $themes = list_themes();

    $admin_theme = config_get('system.core', 'admin_theme');
    $jquery = backdrop_get_library('system', 'jquery');
    $ui = backdrop_get_library('system', 'ui');
    if ($GLOBALS['theme_key'] == $admin_theme) {
      $versions['admin_theme']['jquery'] = $jquery['version'];
      $versions['admin_theme']['ui'] = $ui['version'];
    }
    else {
      // This is not always called from the admin theme, e.g. during simpletest.
      $backup_theme_key = $GLOBALS['theme_key'];
      $GLOBALS['theme_key'] = $admin_theme;
      try {
        $libraries = array('jquery' => $jquery, 'ui' => $ui);
        jquery_update_library_info_alter($libraries, 'system');
        $versions['admin_theme']['jquery'] = $libraries['jquery']['version'];
        $versions['admin_theme']['ui'] = $libraries['ui']['version'];
      }
      catch (\Exception $e) {
        watchdog_exception('jquery_update', $e);
        $requirements['jquery_update_error'] = array(
          'title' => t('An error occurred when checking jQuery versions'),
          'severity' => REQUIREMENT_ERROR,
          'description' => t('See the logs for more information.'),
        );
        $GLOBALS['theme_key'] = $backup_theme_key;
        return $requirements;
      }
      $GLOBALS['theme_key'] = $backup_theme_key;
    }

    // Try to retrieve versions for the default theme too. This seems a hacky
    // way to do it, but we cannot rely on theme_get_setting() to reflect what
    // the alter hook will actually set for the jquery libraries.
    $default_theme = config_get('system.core', 'theme_default');
    if (!is_null($default_theme)) {
      $backup_theme_key = $GLOBALS['theme_key'];
      $GLOBALS['theme_key'] = $default_theme;
      try {
        $libraries = array('jquery' => $jquery, 'ui' => $ui);
        jquery_update_library_info_alter($libraries, 'system');
        $versions['theme_default']['jquery'] = $libraries['jquery']['version'];
        $versions['theme_default']['ui'] = $libraries['ui']['version'];
      }
      catch (\Exception $e) {
        watchdog_exception('jquery_update', $e);
        $requirements['jquery_update_error'] = array(
          'title' => t('An error occurred when checking jQuery versions'),
          'severity' => REQUIREMENT_ERROR,
          'description' => t('See the logs for more information.'),
        );
        $GLOBALS['theme_key'] = $backup_theme_key;
        return $requirements;
      }
      $GLOBALS['theme_key'] = $backup_theme_key;
    }

    foreach ($versions as $theme => $library_version) {

      // @todo what's the equivalent of this d7 variable?
      if (!$theme_key = variable_get($theme, FALSE)) {
        $theme_key = $default_theme;
      }
      $theme_name = $themes[$theme_key]->info['name'];

      $requirements['jquery_update_' . $theme] = array(
        'title' => t('jQuery Update (@theme: %theme_name)', array(
          '@theme' => $theme,
          '%theme_name' => $theme_name,
        )),
        'severity' => REQUIREMENT_OK,
        'value' => t('jQuery %jquery (<a href="@link">configure</a>) and jQuery UI %ui', array(
          '%jquery' => $library_version['jquery'],
          '%ui' => $library_version['ui'],
          '@link' => url('admin/config/development/jquery_update'),
        )),
      );
    }
    $updates_available = _jquery_update_check_available_updates();
    if (!empty($updates_available)) {
      $requirements['jquery_update_library_updates_available'] = array(
        'title' => t('jQuery Update library updates available'),
        'severity' => config_get('jquery_update.settings', 'warning_available_update') ? REQUIREMENT_WARNING : REQUIREMENT_INFO,
        'value' => format_string('<a href="@link">%libraries</a>', array(
          '@link' => url('admin/config/development/jquery_update', array('fragment' => 'edit-jquery-latest-versions')),
          '%libraries' => implode(', ', $updates_available),
        )),
        'description' => t('Updates are available for at least one library managed by jQuery Update.'),
      );
    }
  }

  return $requirements;
}

/**
 * Helper function for setting a theme jQuery version during install or update.
 *
 * @param string $theme_key
 *   The machine name of the theme to set.
 * @param string $version
 *   The MAJOR.MINOR jQuery version to set.
 */
function _jquery_update_set_theme_version($theme_key, $version) {
  // Set the jQuery version.
  config_set($theme_key . '.settings', 'jquery_version', $version);
  cache_clear_all();
}

/**
 * Implements hook_install().
 */
function jquery_update_install() {
  // Use core's default jQuery version for the "seven" admin theme.
  _jquery_update_set_theme_version('seven', 'default');
}

/**
 * Set the minimum upgrade version.
 *
 * Ensure you've upgraded to the 7.x-4.x version of jquery_update in Drupal 7 before
 * attempting to upgrade to Backdrop.
 */
function jquery_update_update_last_removed() {
  return 7002;
}

/**
 * Update jquery_update from Drupal to Backdrop.
 */
function jquery_update_update_1000() {
  $config = config('jquery_update.settings');

  // Migrate variables
  $config->set('compression_type', update_variable_get('jquery_update_compression_type', 'min'));
  $config->set('jquery_version', update_variable_get('jquery_update_jquery_version', '1.12'));
  $config->set('jquery_cdn', update_variable_get('jquery_update_jquery_cdn', 'none'));
  $config->set('custom_version_jquery', update_variable_get('jquery_update_custom_version_jquery', FALSE));
  $config->set('jquery_migrate_enable', update_variable_get('jquery_update_jquery_migrate_enable', FALSE));
  $config->set('jquery_migrate_cdn', update_variable_get('jquery_update_jquery_migrate_cdn', FALSE));
  $config->set('jquery_migrate_warnings', update_variable_get('jquery_update_jquery_migrate_warnings', FALSE));
  $config->set('jquery_migrate_trace', update_variable_get('jquery_update_jquery_migrate_trace', FALSE));
  $config->set('custom_path_jquery', update_variable_get('jquery_update_custom_path_jquery', FALSE));
  $config->set('custom_version_jquery', update_variable_get('jquery_update_custom_version_jquery', FALSE));
  $config->set('custom_path_jqueryui', update_variable_get('jquery_update_custom_path_jqueryui', FALSE));
  $config->set('custom_version_jqueryui', update_variable_get('jquery_update_custom_version_jqueryui', FALSE));
  $config->set('custom_path_cookie', update_variable_get('jquery_update_custom_path_cookie', FALSE));
  $config->set('custom_version_jquery_cookie', update_variable_get('jquery_update_custom_version_jquery_cookie', FALSE));
  $config->set('custom_path_form', update_variable_get('jquery_update_custom_path_form', FALSE));
  $config->set('custom_version_jquery_form', update_variable_get('jquery_update_custom_version_jquery_form', FALSE));
  $config->set('custom_path_migrate', update_variable_get('jquery_update_custom_path_migrate', FALSE));
  $config->set('custom_version_jquery_migrate', update_variable_get('jquery_update_custom_version_jquery_migrate', FALSE));
  $config->set('check_latest_versions', update_variable_get('jquery_update_check_latest_versions', TRUE));
  $config->set('latest_version_jquery', update_variable_get('jquery_update_latest_version_jquery', FALSE));
  $config->set('latest_version_jqueryui', update_variable_get('jquery_update_latest_version_jqueryui', FALSE));
  $config->set('latest_version_jquery_cookie', update_variable_get('jquery_update_latest_version_jquery_cookie', FALSE));
  $config->set('latest_version_jquery_form', update_variable_get('jquery_update_latest_version_jquery_form', FALSE));
  $config->set('latest_version_jquery_migrate', update_variable_get('jquery_update_latest_version_jquery_migrate', FALSE));
  $config->set('warning_available_update', update_variable_get('jquery_update_warning_available_update', TRUE));
  $config->save();

  state_set('latest_versions_checked', update_variable_get('jquery_update_latest_versions_checked', FALSE));

  // Delete variables.
  update_variable_del('jquery_update_compression_type');
  update_variable_del('jquery_update_jquery_version');
  update_variable_del('jquery_update_jquery_cdn');
  update_variable_del('jquery_update_custom_version_jquery');
  update_variable_del('jquery_update_jquery_migrate_enable');
  update_variable_del('jquery_update_jquery_migrate_cdn');
  update_variable_del('jquery_update_jquery_migrate_warnings');
  update_variable_del('jquery_update_jquery_migrate_trace');
  update_variable_del('jquery_update_custom_path_jquery');
  update_variable_del('jquery_update_custom_version_jquery');
  update_variable_del('jquery_update_custom_path_jqueryui');
  update_variable_del('jquery_update_custom_version_jqueryui');
  update_variable_del('jquery_update_custom_path_cookie');
  update_variable_del('jquery_update_custom_version_jquery_cookie');
  update_variable_del('jquery_update_custom_path_form');
  update_variable_del('jquery_update_custom_version_jquery_form');
  update_variable_del('jquery_update_custom_path_migrate');
  update_variable_del('jquery_update_custom_version_jquery_migrate');
  update_variable_del('jquery_update_check_latest_versions');
  update_variable_del('jquery_update_latest_versions_checked');
  update_variable_del('jquery_update_latest_version_jquery');
  update_variable_del('jquery_update_latest_version_jqueryui');
  update_variable_del('jquery_update_latest_version_jquery_cookie');
  update_variable_del('jquery_update_latest_version_jquery_form');
  update_variable_del('jquery_update_latest_version_jquery_migrate');
  update_variable_del('jquery_update_warning_available_update');
}
